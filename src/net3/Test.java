/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net3;

/**
 *
 * @author Alexandre
 */
public class Test {
    
    public static final int NB_ITER = 2000;
    
    public static void main(String[] args)
    {
        double[][][] letters = { { // A
                                    {0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0},
                                    {0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,1,1,0,1,0,0,1,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0},
                                    {0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,1,0,0,1,1,0,1,0,0,0,1},
                                    {0,0,1,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0},
                                    {0,1,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0},
                                    {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0}
                                 },
                                  { // B
                                    {0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0},
                                    {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,0,0,0},
                                    {1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                    {0,1,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0},
                                    {0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0},
                                    {0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0},
                                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,1,1,1},
                                    {0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                    {0,0,0,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
                                  },
                                  { // C
                                    {0,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0},
                                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0},
                                    {0,1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
                                    {0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0},
                                    {0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                    {0,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,0},
                                    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,1,1},
                                  },
                               };
        
        double[] valid = {1};
        double[] non_valid = {0};
        
        double[][] inputs = new double[NB_ITER][36];
        double[][] target = new double[NB_ITER][1];
        
        for (int i = 0; i < NB_ITER; i++)
        {
            double numrand = Math.random();
            if (numrand >= 0.75)
            {
                int index = (int)(10 * Math.random());
                inputs[i] = letters[0][index];
                target[i] = valid;
            }
            else if (numrand >= 0.5)
            {                
                int index = (int)(10 * Math.random());
                inputs[i] = letters[1][index];
                target[i] = non_valid;
            }
            else if (numrand >= 0.25)
            {                
                int index = (int)(10 * Math.random());
                inputs[i] = letters[2][index];
                target[i] = non_valid;
            }
            else
            {
                for (int j = 0; j < 36; j++)
                {
                    if (Math.random() >= 0.5)
                    {
                        inputs[i][j] = 1;
                    }
                    else
                    {
                        inputs[i][j] = 0;
                    }
                }
                
                target[i] = non_valid;
            }
        }
        
        NeuralNetwork net = new NeuralNetwork(36, 50, 1);
        
        for (int i = 0; i < inputs.length; i++)
        {
            net.train(inputs[i], target[i]);
        }
        
        double[] a = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,1,0};
        double[] b = {0,1,1,1,1,0,0,1,0,0,1,0,0,1,1,1,1,0,0,1,0,1,1,0,0,1,0,0,1,0,0,1,1,1,1,0};
        double[] c = {0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0};
        double[] a2 = {0,0,0,0,0,0,0,1,0,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0};
        double[] j = {0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,1,1,0,0};
        
        net.test(a);
        net.test(b);
        net.test(c);
        net.test(a2);
        net.test(j);
    }
}
